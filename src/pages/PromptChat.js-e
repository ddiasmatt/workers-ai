import React, { useState, useEffect, useRef, useContext } from 'react';
import { useNavigate, useParams, useSearchParams } from 'react-router-dom';
import { ChatHistoryContext } from '../App';
import ReactMarkdown from 'react-markdown';
import remarkGfm from 'remark-gfm';
import {
  Box,
  TextField,
  IconButton,
  Paper,
  Typography,
  Avatar,
  CircularProgress,
  List,
  ListItem,
  ListItemText,
  ListItemAvatar,
  Divider,
  Alert,
  Button,
  AppBar,
  Snackbar,
  Chip,
  Tooltip,
  Dialog,
  DialogTitle,
  DialogContent,
  DialogContentText,
  DialogActions,
  MenuItem,
  Card,
  CardContent,
  CardActions,
  Menu,
  ListItemIcon
} from '@mui/material';
import SendIcon from '@mui/icons-material/Send';
import ArrowBackIcon from '@mui/icons-material/ArrowBack';
import PersonIcon from '@mui/icons-material/Person';
import SmartToyIcon from '@mui/icons-material/SmartToy';
import AttachFileIcon from '@mui/icons-material/AttachFile';
import PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';
import DescriptionIcon from '@mui/icons-material/Description';
import TableChartIcon from '@mui/icons-material/TableChart';
import WarningIcon from '@mui/icons-material/Warning';
import TuneIcon from '@mui/icons-material/Tune';
import SaveIcon from '@mui/icons-material/Save';
import DeleteIcon from '@mui/icons-material/Delete';
import EditIcon from '@mui/icons-material/Edit';
import MoreVertIcon from '@mui/icons-material/MoreVert';
import AddIcon from '@mui/icons-material/Add';
import SettingsIcon from '@mui/icons-material/Settings';
import { 
  hasApiKey, 
  uploadFile,
  ConversationManager,
  sendMessageWithStreaming,
  retrieveFileContent
} from '../services/prompt';

// Modelos disponÃ­veis
const AVAILABLE_MODELS = [
  // GPT-4 Series
  { id: 'gpt-4.1', name: 'GPT-4.1 ðŸ”¥', description: 'Nova geraÃ§Ã£o com 1M+ tokens de contexto', contextWindow: 1047576, maxOutputTokens: 32768 },
  { id: 'gpt-4o', name: 'GPT-4o', description: 'Ãšltima versÃ£o GPT-4 otimizada', contextWindow: 128000, maxOutputTokens: 4096 },
  { id: 'gpt-4-turbo', name: 'GPT-4 Turbo', description: 'VersÃ£o mais recente da sÃ©rie GPT-4', contextWindow: 128000, maxOutputTokens: 4096 },
  { id: 'gpt-4', name: 'GPT-4', description: 'VersÃ£o estÃ¡vel GPT-4', contextWindow: 8192, maxOutputTokens: 4096 },
  
  // Claude Series
  { id: 'claude-3-7-sonnet-20250219', name: 'Claude 3.7 Sonnet', description: 'Modelo Claude com alta capacidade', contextWindow: 200000, maxOutputTokens: 4096 },
  { id: 'claude-3-opus-20240229', name: 'Claude 3 Opus', description: 'VersÃ£o premium do Claude com alta capacidade', contextWindow: 200000, maxOutputTokens: 4096 },
  
  // GPT-3.5 Series
  { id: 'gpt-3.5-turbo', name: 'GPT-3.5 Turbo', description: 'VersÃ£o rÃ¡pida e econÃ´mica', contextWindow: 16385, maxOutputTokens: 4096 }
];

// Ferramentas disponÃ­veis com as definiÃ§Ãµes completas para a API
const AVAILABLE_TOOLS = [
  { 
    id: 'code_interpreter', 
    name: 'Interpretador de CÃ³digo', 
    description: 'Executa cÃ³digo Python para anÃ¡lises e cÃ¡lculos',
    type: 'code_interpreter',
    models: ['gpt-4o', 'gpt-4-turbo', 'gpt-4', 'gpt-3.5-turbo'],
    apiDefinition: {
      type: 'code_interpreter'
    }
  },
  { 
    id: 'retrieval', 
    name: 'RecuperaÃ§Ã£o de Conhecimento', 
    description: 'Pesquisa informaÃ§Ãµes em arquivos anexados',
    type: 'retrieval',
    models: ['gpt-4o', 'gpt-4-turbo', 'gpt-4', 'gpt-3.5-turbo'],
    apiDefinition: {
      type: 'retrieval'
    }
  },
  { 
    id: 'web_browsing', 
    name: 'NavegaÃ§Ã£o Web', 
    description: 'Acessa e resume conteÃºdo da web',
    type: 'web_browsing',
    models: ['gpt-4o', 'gpt-4-turbo', 'gpt-4', 'gpt-3.5-turbo'],
    apiDefinition: {
      type: 'web_browsing'
    }
  },
  { 
    id: 'web_search', 
    name: 'Pesquisa Web', 
    description: 'Pesquisa informaÃ§Ãµes na internet em tempo real',
    type: 'function',
    models: ['gpt-4o', 'gpt-4-turbo', 'gpt-4', 'gpt-3.5-turbo', 'claude-3-7-sonnet-20250219', 'claude-3-opus-20240229'],
    apiDefinition: {
      type: 'function',
      function: {
        name: 'web_search',
        description: 'Pesquisa informaÃ§Ãµes atualizadas na internet',
        parameters: {
          type: 'object',
          properties: {
            query: {
              type: 'string',
              description: 'A consulta de pesquisa'
            }
          },
          required: ['query']
        }
      }
    }
  },
  { 
    id: 'function_calling', 
    name: 'Chamada de FunÃ§Ãµes', 
    description: 'Estrutura dados para integraÃ§Ã£o com APIs',
    type: 'function',
    models: ['gpt-4o', 'gpt-o3', 'gpt-4.5'],
    apiDefinition: {
      type: 'function',
      function: {
        name: 'get_data',
        description: 'Recupera dados de uma fonte externa',
        parameters: {
          type: 'object',
          properties: {
            query: {
              type: 'string',
              description: 'A consulta a ser executada'
            }
          },
          required: ['query']
        }
      }
    }
  },
  {
    id: 'vision',
    name: 'VisÃ£o Computacional', 
    description: 'Processa e analisa imagens e vÃ­deos',
    type: 'vision',
    models: ['gpt-4o', 'gpt-o3', 'gpt-4.5'],
    apiDefinition: {
      type: 'vision'
    }
  },
  {
    id: 'advanced_reasoning',
    name: 'RaciocÃ­nio AvanÃ§ado', 
    description: 'Capacidades avanÃ§adas para seguir instruÃ§Ãµes especÃ­ficas',
    type: 'function',
    models: ['gpt-o3', 'gpt-4.5'],
    apiDefinition: {
      type: 'function',
      function: {
        name: 'advanced_reasoning',
        description: 'Aplicar raciocÃ­nio avanÃ§ado para resolver problemas complexos',
        parameters: {
          type: 'object',
          properties: {
            problem: {
              type: 'string',
              description: 'O problema a ser resolvido'
            }
          },
          required: ['problem']
        }
      }
    }
  },
  {
    id: 'long_context',
    name: 'Contexto Longo', 
    description: 'Capacidade de lidar com 1M+ tokens de entrada',
    type: 'function',
    models: ['gpt-4.1'],
    apiDefinition: {
      type: 'function',
      function: {
        name: 'process_long_context',
        description: 'Processar e analisar documentos muito longos',
        parameters: {
          type: 'object',
          properties: {
            action: {
              type: 'string',
              description: 'AÃ§Ã£o a ser executada no documento longo',
              enum: ['summarize', 'extract', 'analyze']
            }
          },
          required: ['action']
        }
      }
    }
  }
];
const PromptChat = () => {
  return <div>Loading...</div>;
};

export default PromptChat;
